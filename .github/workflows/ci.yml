# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: simple_bank
          # TODO: unable to turn off fsync easily, see
          # https://github.com/orgs/community/discussions/26688#discussioncomment-3252882
          # and
          # https://github.com/actions/runner/discussions/1872
        ports:
          - 5433:5432
        # Use a temporary directory for data by passing --mount to the `docker`
        # command; could also attempt to use the volumes: github serrvice
        # option.
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Run migrations
        run: make migrateup

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Test
        run: make test
